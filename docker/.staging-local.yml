version: '3.1'

volumes:
  server_public_folder:
  postgres:
  redis:

services:
  postgres:
    image: postgres:13
    env_file:
      - secret-envs/postgres-credentials.env
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  redis:
    image: redis:latest
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  be:
    image: 840573575565.dkr.ecr.us-east-1.amazonaws.com/airplanner/be_with_deps:staging
    command: >
      /bin/bash -c "
      rm -rfd /server_public_folder/* &&
      cp -R /app/public/* /server_public_folder/ &&
      bundle exec rake db:create &&
      bundle exec rake db:migrate &&
      exec bundle exec puma -C config/puma.rb"
    volumes:
      - server_public_folder:/server_public_folder
    env_file:
      - secret-envs/secret-key-base.env
      - secret-envs/rails-environment-prod.env
      - secret-envs/s3-production.env
      - secret-envs/postgres-credentials.env
      - secret-envs/devise-secret-key.env
      - secret-envs/aws.env
      - secret-envs/session.env
    depends_on:
      - postgres
      - redis
    restart: on-failure
    # ports:
    #   - 3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  sidekiq:
    build: 840573575565.dkr.ecr.us-east-1.amazonaws.com/airplanner/be_with_deps:staging
    command: bundle exec sidekiq -C config/sidekiq.yml
    env_file:
      - secret-envs/secret-key-base.env
      - secret-envs/rails-environment-prod.env
      - secret-envs/s3-production.env
      - secret-envs/postgres-credentials.env
      - secret-envs/devise-secret-key.env
      - secret-envs/aws.env
      - secret-envs/session.env
    depends_on:
      - postgres
      - redis
    restart: on-failure

  nginx:
    image: 840573575565.dkr.ecr.us-east-1.amazonaws.com/airplanner/nginx:staging
    command: >
      /bin/bash -c "
      /usr/bin/prepare-config.sh &&
      exec nginx -g daemon off"
    volumes:
      - server_public_folder:/server_public_folder
    environment:
      NGINX_APP_NAME: be
      NGINX_APP_PORT: 3000
      NGINX_APP_VHOST: TODO # curl http://169.254.169.254/latest/meta-data/public-hostname
      NGINX_STATIC_PATH: /server_public_folder
    ports:
      - 80:8080
    depends_on:
      - be
