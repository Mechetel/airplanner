version: '3.1'

volumes:
  be_gems:
    external:
      name: airplanner_global_be_gems
  postgres:
  redis:

services:
  postgres:
    image: postgres:13
    env_file:
      - secret-envs/postgres-credentials-initial.env
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    volumes:
      - redis:/var/lib/redis/data

  be:
    build:
      context: dockerfiles
      dockerfile: be.Dockerfile
    command: >
      /bin/bash -c "
      rm -f tmp/pids/server.pid &&
      bundle exec rake db:create &&
      bundle exec rake db:migrate &&
      exec bundle exec rails server -b 0.0.0.0"
    ports:
      - 3000:3000
    env_file:
      - secret-envs/secret-key-base.env
      - envs/rails-environment-dev.env
      - secret-envs/s3-production.env
      - secret-envs/database-url.env
      - secret-envs/devise-secret-key.env
      - secret-envs/aws.env
      - secret-envs/session.env
    environment:
      REDIS_URL: "redis://redis:6379/0"
      WEBPACKER_DEV_SERVER_HOST: webpack
    volumes:
      - be_gems:/usr/local/bundle

      # sync to /app
      - ..:/app
      # - /app/tmp/pids/
      # - /app/tmp/sockets/
    depends_on:
      - postgres
      - redis
      - webpack
    restart: on-failure

  sidekiq:
    build:
      context: dockerfiles
      dockerfile: be.Dockerfile
    command: bundle exec sidekiq -C config/sidekiq.yml
    env_file:
      - secret-envs/secret-key-base.env
      - envs/rails-environment-dev.env
      - secret-envs/s3-production.env
      - secret-envs/database-url.env
      - secret-envs/devise-secret-key.env
      - secret-envs/aws.env
      - secret-envs/session.env
    environment:
      REDIS_URL: redis://redis:6379/0
    volumes:
      - be_gems:/usr/local/bundle

      # sync to /app
      - ..:/app
    depends_on:
      - postgres
      - redis
    restart: on-failure

  webpack:
    build:
      context: dockerfiles
      dockerfile: be.Dockerfile
    command: ./bin/webpack-dev-server --hot
    volumes:
      - be_gems:/usr/local/bundle
      # sync to /app
      - ..:/app
    ports:
      - 3035:3035
    environment:
      NODE_ENV: development
      RAILS_ENV: development
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  nginx:
    image: 840573575565.dkr.ecr.us-east-1.amazonaws.com/staging-airplanner/nginx:latest
    # build:
    #   context: datum/nginx/
    #   dockerfile: dockerfiles/nginx.Dockerfile
    command: >
      /bin/bash -c "
      /usr/bin/prepare-config &&
      exec nginx -g daemon off"
    # volumes:
    #   - server_public_folder:/server_public_folder
    environment:
      NGINX_APP_NAME: be
      NGINX_APP_PORT: 3000
      NGINX_APP_VHOST: ec2-3-84-255-26.compute-1.amazonaws.com
      NGINX_STATIC_PATH: /server_public_folder
    ports:
      - 80:8080
    depends_on:
      - be

  # user: pgadmin4@pgadmin.org
  # password: admin
  # pgadmin:
  #   image: fenglc/pgadmin4
  #   ports:
  #     - 5050:5050
  #   depends_on:
  #     - postgres
